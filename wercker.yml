box: golang:1.8
build:
  base-path: /go/src/github.com/wercker/hello-world
  steps:
    - script:
        name: Get app dependencies 
        code: go get

    - script:
        name: Build application
        code: go build

push-release:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        working-dir: /pipeline/source
        ports: "8080"
        cmd: ./hello-world
        repository: $DOCKER_REPO
        registry: $DOCKER_REGISTRY
        
#delete any existing Wercker secret before creating, to accommodate secret changes
inject-secret:
  box:
    id: alpine
    cmd: /bin/sh
  steps:   
    - bash-template
    - create-file:
      name: Create ca.pem
      filename: ca.pem
      content: $KUBERNETES_ROOT_CA_PEM

    - create-file:
      name: Create admin.pem
      filename: admin.pem
      content: $KUBERNETES_ADMIN_PEM

    - create-file:
      name: Create admin-key.pem
      filename: admin-key.pem
      content: $KUBERNETES_ADMIN_KEY_PEM        

    - kubectl:
        name: delete secret
        certificate-authority: ca.pem
        client-certificate: admin.pem
        client-key: admin-key.pem
        command: delete secret wercker; echo delete registry secret
         
    - kubectl:
        name: create secret
        certificate-authority: ca.pem
        client-certificate: admin.pem
        client-key: admin-key.pem
        command: create secret docker-registry wercker --docker-server=$DOCKER_SERVER --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=$DOCKER_EMAIL; echo create registry secret
         
deploy-to-cluster:
  box:
    id: alpine
    cmd: /bin/sh
  steps:
    - bash-template

    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes.yml

    - kubectl:
        name: deploy to kubernetes
        certificate-authority: ca.pem
        client-certificate: admin.pem
        client-key: admin-key.pem        
        command: apply -f kubernetes.yml
